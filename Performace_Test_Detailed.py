# -*- coding: utf-8 -*-
"""Performance_Test_ReportDetailed.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1MyCdLsMsNIjf5gHSBk7L60Mk1mPAaK4K
"""



from google.colab import drive
drive.mount('/content/drive')

import networkx as nx
from networkx.algorithms.community.kernighan_lin import kernighan_lin_bisection
from scipy.io import mmread
import time
from openpyxl import Workbook
import random
import statistics
from statistics import stdev as sd
import numpy as np
import scipy
from scipy.stats import t
import math
import pandas as pd

from scipy.stats import t

#path = '/content/drive/My Drive/301_Project/Performance_for_Report.gsheet'

df = pd.DataFrame(columns=['Size', 'Mean Time(s)', 'Standard Deviation', 'Standard Error', '%95-CL'])

sizes = [10, 30, 50, 80, 100]

for i in sizes:
  gg = []
  for k in range(0, 1000+1):
    v = i

    e = random.randint(v, 2*v)
    G = nx.gnm_random_graph(v, e)

    start_time = time.time()
    kernighan_lin_bisection(G)
    end_time = time.time()
    gg.append(end_time - start_time)

  t_val = t.ppf(0.95, k)
  mean = 0
  for j in range(len(gg)):
    mean += gg[j]
  mean = mean/len(gg)
  st_dev = sd(gg)

  std_mean_err = st_dev / k**(0.5)

  low = mean - t_val * std_mean_err
  high = mean + t_val * std_mean_err

  conf = str(low) + ' - ' + str(high)
  conf = str(conf)

  df = df.append({'Size': i , 'Mean Time(s)': mean, 'Standard Deviation': st_dev, 'Standard Error': std_mean_err, '%95-CL': conf }, ignore_index=True)

print(type(df))
path = "/content/drive/My Drive/301_Project/Performance results/" + str(k) + "RUNS.xlsx"
df.to_excel(path)
