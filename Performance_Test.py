# -*- coding: utf-8 -*-
"""CS301_Project_Performance_General.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1-r6MyOVr4UqFDYZlY6GBVbuRtu9Te3_e
"""

from google.colab import drive
drive.mount('/content/drive')

path = "/content/drive/My Drive/301_Project/"
import networkx as nx
from networkx.algorithms.community.kernighan_lin import kernighan_lin_bisection
from scipy.io import mmread
import time
from openpyxl import Workbook
import random
import statistics
from statistics import stdev as sd
import numpy as np
import scipy
from scipy.stats import t
import math

from scipy.stats import t


for k in range(190, 201, 10):
  #print(i)

  wb = Workbook()
  sheet = wb.active


  list_performance = []
  gg = []

  n = 10

  start_time_big = time.time()
  for i in range(0,1000+1):
    v = n
    e = random.randint(v, 2*v)
    G = nx.gnm_random_graph(v, e)
    start_time = time.time()
    kernighan_lin_bisection(G)
    end_time = time.time()
    list_performance.append((v, e, end_time - start_time))
    gg.append(end_time - start_time)
  end_time_big = time.time()

  for row in list_performance:
    sheet.append(row)

  filepath = "/content/drive/My Drive/301_Project/" + str(v) + '_' + str(i)
  wb.save(filepath)


  t_val = t.ppf(0.95, i)
  mean = 0
  for i in range(len(gg)):
    mean += gg[i]
  mean = mean/len(gg)
  st_dev = sd(gg)

  std_mean_err = st_dev / i**(0.5)

  low = mean - t_val * std_mean_err
  high = mean + t_val * std_mean_err

  print("#vertex: ", n)
  print("#try:", i)
  print('mean: ', mean)
  print(low, high)
  print('time:', end_time_big - start_time_big)

from scipy.stats import t

tt = 0
for i in range(len(gg)):
  tt += gg[i]

mean = tt/len(gg)
st_dev = sd(gg)
st_mean_err = st_dev/np.sqrt(n)

t = t.ppf(0.90, 100)
print(t)
